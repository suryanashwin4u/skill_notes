ES6 or ECMAScript 6 is a scripting language specification which is standardized by ECMAScript International.

ECMAScript is generally used for client-side scripting, and it is also used for writing server applications and services by using Node.js.

makes your code more modern and readable

'Write less, do more' suits ES6.

ES6 introduces you many great features such as scope variable, arrow functions, template strings, class destructions, modules, etc.

Node is a platform that runs on the V8 JavaScript engine (It is a JavaScript engine that is responsible for running the JavaScript code) of Google. It helps you to create scalable and fast applications by using pure JavaScript.

The Node.js is an open-source server-side environment that is free and can run on multiple platforms such as Windows, UNIX, Linux, etc. It uses the JavaScript on the server. It uses the Google V8 JavaScript engine for executing the code. It uses the asynchronous programming (It is a design pattern that ensures the execution of non-blocking code)

Literals: A literal can be defined as a notation for representing the fixed value within the source code.
int x = 1;  
string str = "hello";  

Identifiers do not include any special symbol except the dollar sign ($) or underscore (_).

Identifiers include the characters as well as digits. But you cannot start the name of the identifier with a digit.

Identifiers are case-sensitive and do not contain spaces.

ECMAScript ignores the tabs, spaces, and the newlines that appear in the programs.

JavaScript programmers should use the Lower Camel Case (starts with a lowercase letter).

hyphens are not allowed

The strict mode was introduced in ECMAScript 5 (the fifth edition of the ECMAScript specification). You can use this strict mode in all of your programs. It will help you to write clean code, like preventing you from using undeclared variables.

The strict mode prohibits some of the syntaxes, which is likely to be defined within the future versions of ECMAScript.
Strict mode removes some of the JavaScript silent errors by changing them to throw errors.
The strict mode also fixes the mistakes, which makes it difficult for the JavaScript engines to perform optimizations, so the strict mode sometimes makes to run faster compared to the identical mode.


You can declare the strict mode by adding "use strict"; at the beginning of a function or a script.

Declare at the beginning of the script:When you declare it at the beginning of the script then, it will be a global scope, i.e., all code within the script will execute in the strict mode.

"use strict";  
example();  
function example() {  
  x= 89;   // It will also cause an error because x is not declared<br>  
}  




