
                SQL NOTES
******************************************

//select column syntax

==>SELECT column1, column2, ... FROM table_name;
----------------------------------------------
//select all columns from a table

==>SELECT * FROM table_name;
----------------------------------------------
//select only 2 columns from a table

==>SELECT CustomerName, City FROM Customers;
----------------------------------------------

******************************************
//select distinct columns syntax 

==>SELECT DISTINCT column1, column2, ... FROM table_name;
----------------------------------------------
//select only distinct values from a column in a table

==>SELECT DISTINCT Country FROM Customers;
----------------------------------------------
//select distict values from a table and then return count

==>SELECT COUNT(DISTINCT Country) FROM Customers;
----------------------------------------------

******************************************
// select columns using where conditions syntax

==>SELECT column1, column2, ... FROM table_name WHERE condition;
----------------------------------------------
//select those rows from the table where country is mexico

==>SELECT * FROM Customers WHERE Country='Mexico';
----------------------------------------------
//select all rows from the table where customerID is 1

==>SELECT * FROM Customers WHERE CustomerID=1;
----------------------------------------------
//select all rows from the table where price > 30

==>SELECT * FROM Products WHERE Price > 30;
----------------------------------------------
//select all rows from the table where price < 30

==>SELECT * FROM Products WHERE Price < 30;
----------------------------------------------
//select all rows from the table where price >= 30

==>SELECT * FROM Products WHERE Price >= 30;
----------------------------------------------
//select all rows from the table where price <= 30

==>SELECT * FROM Products WHERE Price <= 30;
----------------------------------------------
//select all rows from the table where price is not equal to 18

==>SELECT * FROM Products WHERE Price <> 18;
----------------------------------------------
//select all rows from the table where price comes between 50 and 60

==>SELECT * FROM Products WHERE Price BETWEEN 50 AND 60;
----------------------------------------------
//select all rows from the table where city name starts with letter 's'

==>SELECT * FROM Customers WHERE City LIKE 's%';
----------------------------------------------
//select all rows from the table where city name having paris and london

==>SELECT * FROM Customers WHERE City IN ('Paris','London');
**********************************************
//select rows from columns from a table where conditions with AND/OR/NOT operations matches

==>SELECT column1, column2, ... FROM table_name WHERE condition1 AND condition2 AND condition3 ...;

==>SELECT column1, column2, ... FROM table_name WHERE condition1 OR condition2 OR condition3 ...;

==>SELECT column1, column2, ... FROM table_name WHERE NOT condition;
----------------------------------------------
//select all columns rows from the table where country is germany and city is berlin

==>SELECT * FROM Customers WHERE Country='Germany' AND City='Berlin';
----------------------------------------------
//select all columns rows from the table where country is munchen or city is berlin

==>SELECT * FROM Customers WHERE City='Berlin' OR City='München';
----------------------------------------------
//select all columns rows from the table where country is not germany

==>SELECT * FROM Customers WHERE NOT Country='Germany';
----------------------------------------------
//select all columns rows from the table where country is germany and city may be berlin or munchen

==>SELECT * FROM Customers WHERE Country='Germany' AND (City='Berlin' OR City='München');
----------------------------------------------
//select all columns rows from the table where country is not germany and not usa

==>SELECT * FROM Customers WHERE NOT Country='Germany' AND NOT Country='USA';

******************************************
//select columns rows from table and order by columns in ascending or descending order

==>SELECT column1, column2, ... FROM table_name ORDER BY column1, column2, ... ASC|DESC;
---------------------------------------------
//select all columns rows from the table and order by country in ascending order by default

==>SELECT * FROM Customers ORDER BY Country;
---------------------------------------------
//select all columns rows from the table and order by country in descending order

==>SELECT * FROM Customers ORDER BY Country DESC;
---------------------------------------------
//select all columns rows from the table and order by country, if country are same then sort by customername in ascending order

==>SELECT * FROM Customers ORDER BY Country, CustomerName;
---------------------------------------------
//select all columns rows from the table and order by country in ascending order, customername in ascending order

==>SELECT * FROM Customers ORDER BY Country ASC, CustomerName DESC;
******************************************
//insert data into some columns if different order

==>INSERT INTO table_name (column1, column2, column3, ...) VALUES (value1, value2, value3, ...);
---------------------------------------------
//insert data into all columns if same order

==>INSERT INTO table_name VALUES (value1, value2, value3, ...);
---------------------------------------------
//insert data into table

==>INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country) VALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');
------------------------------------------------------------


==>INSERT INTO Customers (CustomerName, City, Country) VALUES ('Cardinal', 'Stavanger', 'Norway');
------------------------------------------------------------

*******************************************

//return all rows containing null
SELECT column_names
FROM table_name
WHERE column_name IS NULL;

//return all rows which does not contain null
SELECT column_names
FROM table_name
WHERE column_name IS NOT NULL;
--------------------------------------------
examples:
SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NULL;
--------------------------------------------
SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NOT NULL;

******************************************
//update sql command
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
--------------------------------------------
example:
UPDATE Customers
SET ContactName = 'Alfred Schmidt', City= 'Frankfurt'
WHERE CustomerID = 1;
--------------------------------------------

